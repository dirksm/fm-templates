<?xml version="1.0"?>
<project
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd"
	xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
	<modelVersion>4.0.0</modelVersion>
	
	<groupId>com.fm.template</groupId>
	<artifactId>web-spring-security-hibernate-hbm-0-0-1</artifactId>
	<version>1.0-SNAPSHOT</version>
	<packaging>war</packaging>
	<name>web-spring-security-hibernate-hbm-0-0-1</name>
	<url>http://maven.apache.org</url>
	
	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>

		<!-- Spring version -->
		<spring.version>3.0.6.RELEASE</spring.version>
		<spring.security.version>3.0.7.RELEASE</spring.security.version>
		
		<!-- MySQL connector -->
		<jdbc.groupId>mysql</jdbc.groupId>
		<jdbc.artifactId>mysql-connector-java</jdbc.artifactId>
		<jdbc.version>5.1.17</jdbc.version>
		
		<!-- Database connection data -->
		<jdbc.driver>com.mysql.jdbc.Driver</jdbc.driver>
		<jdbc.username>root</jdbc.username>
		<jdbc.password>password</jdbc.password>
		<jdbc.schema>template</jdbc.schema>
		<jdbc.url>jdbc:mysql://localhost:3306/</jdbc.url>
		
		<!-- Test database creation and population -->
		<jdbc.dataTypeFactoryName>org.dbunit.dataset.datatype.DefaultDataTypeFactory</jdbc.dataTypeFactoryName>
		<jdbc.skip.database.creation>false</jdbc.skip.database.creation>
		<jdbc.schema.file>src/test/resources/db-schema.sql</jdbc.schema.file>
		<jdbc.skip.insert.data>false</jdbc.skip.insert.data>
		<jdbc.operation.type>CLEAN_INSERT</jdbc.operation.type>
		<jdbc.source.file>src/test/resources/sample-data.xml</jdbc.source.file>
	</properties>
	
	<dependencies>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-webmvc</artifactId>
			<version>${spring.version}</version>
		</dependency>
		
		<dependency>
		    <groupId>org.springframework</groupId>
		    <artifactId>spring-orm</artifactId>
		    <version>${spring.version}</version>
		</dependency>
	
		<dependency>
			<groupId>org.springframework.security</groupId>
			<artifactId>spring-security-core</artifactId>
			<version>${spring.security.version}</version>
		</dependency>
		
		<dependency>
			<groupId>org.springframework.security</groupId>
			<artifactId>spring-security-web</artifactId>
			<version>${spring.security.version}</version>
		</dependency>
		
		<dependency>
			<groupId>org.springframework.security</groupId>
			<artifactId>spring-security-config</artifactId>
			<version>${spring.security.version}</version>
		</dependency>
		
		<dependency>
			<groupId>org.springframework.security</groupId>
			<artifactId>spring-security-taglibs</artifactId>
			<version>${spring.security.version}</version>
		</dependency>
		
		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>servlet-api</artifactId>
			<version>2.4</version>
		</dependency>
		
		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>jstl</artifactId>
			<version>1.2</version>
		</dependency>
		
		<dependency>
			<groupId>opensymphony</groupId>
			<artifactId>sitemesh</artifactId>
			<version>2.4.2</version>
		</dependency>
		
		<!-- Hibernate and MySQL -->
		<dependency>
			<groupId>commons-dbcp</groupId>
			<artifactId>commons-dbcp</artifactId>
			<version>1.4</version>
		</dependency>
			
		<dependency>
		    <groupId>org.hibernate</groupId>
		    <artifactId>hibernate-core</artifactId>
		    <version>3.3.2.GA</version>
		</dependency>
	
		<dependency>
			<groupId>${jdbc.groupId}</groupId>
			<artifactId>${jdbc.artifactId}</artifactId>
			<version>${jdbc.version}</version>
		</dependency>
	
		<!-- Testing -->
		<dependency>
		    <groupId>org.springframework</groupId>
		    <artifactId>spring-test</artifactId>
		    <version>${spring.version}</version>
		</dependency>
		
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>4.8.2</version>
			<scope>test</scope>
		</dependency>
		
		<!-- Logging -->
		<dependency>
		    <groupId>log4j</groupId>
		    <artifactId>log4j</artifactId>
		    <version>1.2.12</version>
		</dependency>
		
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-api</artifactId>
			<version>1.5.8</version>
		</dependency>
		
		<dependency>
		    <groupId>org.slf4j</groupId>
		    <artifactId>slf4j-jdk14</artifactId>
		    <version>1.5.8</version>
		</dependency>
		
		<!-- Other -->
		<dependency>
		    <groupId>cglib</groupId>
		    <artifactId>cglib-nodep</artifactId>
		    <version>2.2</version>
		</dependency>
		
		<dependency>
		    <groupId>javassist</groupId>
		    <artifactId>javassist</artifactId>
		    <version>3.12.1.GA</version>
		</dependency>
	
	</dependencies>
	
	<build>
		<finalName>web-spring-security-hibernate-hbm</finalName>
		
		<plugins>
			<plugin>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>2.0.2</version>
				<configuration>
					<source>1.6</source>
					<target>1.6</target>
				</configuration>
			</plugin>
			
			<plugin>
				<artifactId>maven-eclipse-plugin</artifactId>
				<version>2.5.1</version>
				<configuration>
					<additionalProjectnatures>
						<projectnature>org.eclipse.wst.common.project.facet.core.builder</projectnature>
					</additionalProjectnatures>
					<additionalProjectnatures>
						<projectnature>org.springframework.ide.eclipse.core.springnature</projectnature>
					</additionalProjectnatures>
					<additionalBuildcommands>
						<buildcommand>org.eclipse.wst.common.project.facet.core.builder</buildcommand>
					</additionalBuildcommands>
					<additionalBuildcommands>
						<buildcommand>org.springframework.ide.eclipse.core.springbuilder</buildcommand>
					</additionalBuildcommands>
					<downloadSources>true</downloadSources>
					<downloadJavadocs>true</downloadJavadocs>
					<wtpversion>1.5</wtpversion>
				</configuration>
			</plugin>
			
			<plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>sql-maven-plugin</artifactId>
                <version>1.4</version>
                <configuration>
                    <driver>${jdbc.driver}</driver>
                    <username>${jdbc.username}</username>
                    <password>${jdbc.password}</password>
                    <url>${jdbc.url}</url>
                    <autocommit>true</autocommit>
                </configuration>
                <executions>           
                    <execution>
                        <id>create-schema</id>
                        <phase>test-compile</phase>
                        <goals>
                            <goal>execute</goal>
                        </goals>
                        <configuration>
                        	<skip>${jdbc.skip.database.creation}</skip>
                            <autocommit>true</autocommit>
                            <srcFiles>
                                <srcFile>${jdbc.schema.file}</srcFile>
                            </srcFiles>
                        </configuration>
                    </execution>
                </executions>
                <dependencies>
                    <dependency>
                        <groupId>${jdbc.groupId}</groupId>
                        <artifactId>${jdbc.artifactId}</artifactId>
                        <version>${jdbc.version}</version>
                    </dependency>
                </dependencies>
            </plugin>
            
            <plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>dbunit-maven-plugin</artifactId>
				<version>1.0-beta-1</version>
				<configuration>
					<dataTypeFactoryName>${jdbc.dataTypeFactoryName}</dataTypeFactoryName>
				</configuration>
				<executions>
					<execution>
						<id>security-sample-data</id>
						<phase>test-compile</phase>
						<goals>
							<goal>operation</goal>
						</goals>
						<configuration>
							<driver>${jdbc.driver}</driver>
							<username>${jdbc.username}</username>
							<password>${jdbc.password}</password>
							<url>${jdbc.url}${jdbc.schema}</url>
							<src>${jdbc.source.file}</src>
							<type>${jdbc.operation.type}</type>
							<schema>${jdbc.schema}</schema>
							<skip>${jdbc.skip.insert.data}</skip>
						</configuration>
					</execution>
				</executions>
				<dependencies>
					<dependency>
						<groupId>${jdbc.groupId}</groupId>
						<artifactId>${jdbc.artifactId}</artifactId>
						<version>${jdbc.version}</version>
					</dependency>
				</dependencies>
			</plugin>
		
			<plugin>
				<groupId>org.mortbay.jetty</groupId>
				<artifactId>maven-jetty-plugin</artifactId>
				<configuration>
					<contextPath>/</contextPath>
					<scanIntervalSeconds>3</scanIntervalSeconds>
					<connectors>
						<connector implementation="org.mortbay.jetty.nio.SelectChannelConnector">
							<port>8080</port>
						</connector>
					</connectors>
				</configuration>
			</plugin>
		</plugins>
		
		<resources>
			<resource>
				<directory>src/main/resources</directory>
				<filtering>true</filtering>
			</resource>
		</resources>
	</build>
	
</project>
